{"version":3,"sources":["webpack:///webpack/bootstrap a41afc55144c6ea7eadd","webpack:///./lib/brood.js","webpack:///./lib/alien.js","webpack:///./lib/cannon.js","webpack:///./lib/constants.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,qBAAqB;AACrC,mBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9JA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AC/EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;AACA;AACA;AACA;AACA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a41afc55144c6ea7eadd\n **/","const Constants = require(\"./constants\");\nconst Alien = require(\"./alien.js\");\nconst Cannon = require(\"./cannon.js\");\n\nvar canvas = document.getElementById(\"brood-canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nconst COLORS = [\n    \"blue\",\n    \"red\",\n    \"yellow\"\n];\n\nconst RADIUS = Constants.RADIUS;\nconst SPEED = Constants.SPEED;\n\nconst randomColor = function() {\n  return COLORS[Math.floor(Math.random() * 3)];\n};\n\nconst randomVelocity = function() {\n  let x = Math.random() * 2 - 1;\n  let y = Math.random() * 2 - 1;\n  let speed = Math.random();\n  x = x / Math.sqrt(x * x + y * y);\n  y = y / Math.sqrt(x * x + y * y);\n  return [x, y];\n};\n\nconst getVelocity = function(vector){\n  let x = vector[0];\n  let y = vector[1];\n  let result = [\n    x/Math.sqrt(x * x + y * y),\n    y/Math.sqrt(x * x + y * y)\n  ];\n  return result;\n};\n\nconst aliens = [];\n\nconst shootAlien = function(){\n  let options = {\n    pos: [canvas.width/2, canvas.height],\n    vel: getVelocity([-1, -2]),\n    color: randomColor(),\n    radius: RADIUS\n  };\n\n  newAlien = new Alien(options);\n  aliens.push(newAlien);\n};\n\nplaceRandomAliens = function(start_x, end_x, y, likelihood) {\n  let pos = start_x;\n  // Use the \"chain\" variable to track how many consecutive aliens have been placed\n  let chain = 0;\n  let next_likelihood = likelihood - 0.15;\n  // let placement_likelihood = 0.75;\n  let chance;\n  while(pos < end_x) {\n    chance = Math.random();\n    if(chance < likelihood){\n      let options = {\n        pos: [pos, y],\n        vel: [0,0],\n        color: randomColor(),\n        radius: RADIUS\n      };\n      aliens.push(new Alien(options));\n      chain += 1;\n    } else {\n      if(chain > 1 && next_likelihood > 0){\n        placeRandomAliens(\n          pos - (2 * RADIUS * chain) + RADIUS,\n          pos - (2 * RADIUS),\n          y + 2 * RADIUS,\n          next_likelihood\n        );\n      }\n      chain = 0;\n    }\n\n    pos += 2 * RADIUS;\n  }\n// Call placeAliens on the length approaching the final chain\n  if(chain > 1){\n    // debugger\n    placeRandomAliens(\n      pos - (2 * RADIUS * chain) + RADIUS,\n      pos - (2 * RADIUS),\n      y + 2 * RADIUS,\n      next_likelihood\n    );\n  }\n};\n\nconst placeAlienRows = function() {\n  for(let level = 0; level < 5; level++){\n    let pos = RADIUS + (level % 2) * RADIUS;\n    while(pos < canvas.width) {\n      let height = RADIUS + level * 2 * RADIUS;\n      let options = {\n        pos: [pos, height],\n        vel: [0,0],\n        color: randomColor(),\n        radius: RADIUS\n      };\n\n      aliens.push(new Alien(options));\n      pos += 2 * RADIUS;\n    }\n  }\n};\n\nconst checkCollisions = function() {\n  for(let i = 0; i < (aliens.length); i++) {\n    for(let j = 0; j < (aliens.length); j++) {\n      if(i !=j) aliens[i].stopIfCollidingWith(aliens[j]);\n    }\n  }\n};\n\nconst moveAliens = function() {\n  aliens.forEach(function(invader) {\n    invader.move();//.bind(invader);\n  });\n};\n\nconst fireCannon = function() {\n  let options = {\n    pos: [canvas.width/2, canvas.height],\n    vel: [\n      SPEED * Math.cos(cannon.angle),\n      SPEED * Math.sin(cannon.angle)\n    ],\n    color: randomColor(),\n    radius: RADIUS\n  };\n\n  newAlien = new Alien(options);\n  aliens.push(newAlien);\n};\n\nconst step = function() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  cannon.rotate();\n  cannon.draw();\n  moveAliens();\n  checkCollisions();\n};\n\n// placeRandomAliens(RADIUS, canvas.width, RADIUS, 1);\nplaceAlienRows();\nsetInterval(step.bind(this), 10);\nshootAlien();\nlet cannon = new Cannon();\ndocument.addEventListener('keydown', cannon.onKeyDown.bind(cannon));\ndocument.addEventListener('keyup', cannon.onKeyUp.bind(cannon));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/brood.js\n ** module id = 0\n ** module chunks = 0\n **/","const Constants = require('./constants.js');\nvar canvas = document.getElementById(\"brood-canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nconst RADIUS = Constants.RADIUS;\n\nconst Alien = function(options) {\n  this.color = options.color;\n  this.radius = options.radius;\n  this.pos = options.pos;\n  this.vel = options.vel;\n};\n\nAlien.prototype.draw = function() {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(this.pos[0], this.pos[1], this.radius, 0, Math.PI*2);\n  ctx.fill();\n  ctx.closePath();\n};\n\nAlien.prototype.move = function() {\n  let new_x = (this.pos[0] + this.vel[0]);\n  if(new_x > canvas.width || new_x < 0) {\n    new_x -= this.vel[0] * 2;\n    this.vel[0] *= -1;\n  }\n  let new_y = (this.pos[1] + this.vel[1]);\n  this.pos[0] = new_x;// % canvas.width;\n  this.pos[1] = new_y;// % canvas.height;\n  this.draw();\n};\n\nAlien.prototype.isMoving = function() {\n  // debugger\n  if(this.vel[0] !== 0 || this.vel[1] !== 0) return true;\n  return false;\n};\n\nAlien.prototype.stop = function() {\n  this.vel = [0,0];\n};\n\nAlien.prototype.lock = function(otherAlien) {\n  let pos = [];\n  let x_dist = Math.abs(this.pos[0] - otherAlien.pos[0]);\n  let y_dist = Math.abs(this.pos[1] - otherAlien.pos[1]);\n  let maj_axis = y_dist > x_dist ? 0 : 1;\n  let min_axis = y_dist > x_dist ? 1 : 0;\n  axial_dist = this.pos[maj_axis] - otherAlien.pos[maj_axis];\n\n  if(axial_dist <= RADIUS) {\n    pos[maj_axis] = otherAlien.pos[maj_axis];\n  } else if(this.pos[maj_axis] > otherAlien.pos[maj_axis]) {\n    pos[maj_axis] = otherAlien.pos[maj_axis] + RADIUS;\n  } else {\n    pos[maj_axis] = otherAlien.pos[maj_axis] - RADIUS;\n  }\n\n  pos[min_axis] = this.pos[min_axis] > otherAlien.pos[min_axis] ?\n    otherAlien.pos[min_axis] + 2 * RADIUS :\n    otherAlien.pos[min_axis] - 2 * RADIUS;\n  this.pos = pos;\n  this.stop();\n};\n\nAlien.prototype.stopIfCollidingWith = function (otherAlien) {\n  let x_dist = Math.abs(this.pos[0] - otherAlien.pos[0]);\n  let y_dist = Math.abs(this.pos[1] - otherAlien.pos[1]);\n  if (x_dist <= RADIUS * 2 && y_dist <= RADIUS * 2) {\n    if(this.isMoving()) {\n      this.lock(otherAlien);\n    }\n    // this.stop();\n    // otherAlien.stop();\n  }\n};\n\n\nmodule.exports = Alien;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/alien.js\n ** module id = 1\n ** module chunks = 0\n **/","const Constants = require('./constants.js');\n\nconst canvas = document.getElementById(\"brood-canvas\");\nconst ctx = canvas.getContext(\"2d\");\nconst img = new Image();\nimg.src = '../assets/images/cannon.png';\nlet DELTA = Constants.DELTA;\n\nconst Cannon = function() {\n  this.color = \"blue\";//options.color;\n  this.length = 80;\n  this.width = 20;\n  this.angle = 0;\n};\n\ndrawCannon = function() {\n  ctx.translate(canvas.width/2, canvas.height);\n  ctx.translate(-canvas.width/2, -canvas.height);\n};\n\nCannon.prototype.draw = function() {\n\n  // ctx.translate(canvas.width/2, canvas.height);\n  // ctx.rotate(angle);\n  // ctx.drawImage(img, 0, -150, 200, 100);\n  // ctx.rotate(-angle);\n  // ctx.translate(-canvas.width/2, -canvas.height);\n  // debugger\n\n  ctx.translate(canvas.width/2, canvas.height);\n  ctx.rotate(this.angle);\n  ctx.fillStyle = \"#000\";\n  ctx.beginPath();\n  ctx.rect(-this.width/2, -this.length, this.width, this.length);\n  ctx.fill();\n  ctx.closePath();\n  ctx.rotate(-this.angle);\n  ctx.translate(-canvas.width/2, -canvas.height);\n\n};\n\nCannon.prototype.onKeyDown = function(e) {\n  if(e.keyCode === 39) {\n    this.keydown = \"right\";\n  }\n  if(e.keyCode === 37) {\n    this.keydown = \"left\";\n  }\n};\n\nCannon.prototype.onKeyUp = function(e) {\n  this.keydown = null;\n};\n\n\nCannon.prototype.rotate = function() {\n  if(this.keydown === \"right\") {\n    this.angle += DELTA;\n  }\n  if(this.keydown === \"left\") {\n    this.angle -= DELTA;\n  }\n};\n\nmodule.exports = Cannon;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cannon.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = {\n  RADIUS: 10,\n  DELTA: 0.1,\n  SPEED: 4\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/constants.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}