{"version":3,"sources":["webpack:///webpack/bootstrap efc8caee49fdb98e5b92","webpack:///./lib/brood.js","webpack:///./lib/alien.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,yBAAyB;AACzC,uBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB;AACnB,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AClEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap efc8caee49fdb98e5b92\n **/","const Alien = require(\"./alien.js\");\n\nvar canvas = document.getElementById(\"brood-canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\n// var x = canvas.width/2;\n// var y = canvas.height - 30;\n// var pos = [x,y];\nvar dx = 1;\nvar dy = 1;\nvar vel = [dx, dy];\n\nconst COLORS = [\n    \"blue\",\n    \"red\",\n    \"yellow\"\n];\n\nconst RADIUS = 20;\n\nconst randomColor = function() {\n  return COLORS[Math.floor(Math.random() * 3)];\n};\n\nconst randomVelocity = function() {\n  let x = Math.random() * 2 - 1;\n  let y = Math.random() * 2 - 1;\n  let speed = Math.random();\n  x = x / Math.sqrt(x * x + y * y);\n  y = y / Math.sqrt(x * x + y * y);\n  return [x, y];\n};\n\nconst aliens = [];\n\nfor(let i = 0; i < 5; i++) {\n  let coefficient = 40;\n  let options = {\n    pos: [40 + coefficient * i, 40],\n    vel: randomVelocity(),//[0,0],\n    color: randomColor(),\n    radius: RADIUS\n  };\n  aliens.push(new Alien(options));\n}\n\nconst checkCollisions = function() {\n  for(let i = 0; i < (aliens.length - 1); i++) {\n    for(let j = i + 1; j < aliens.length; j++) {\n      console.log([i, j]);\n      aliens[i].stopIfCollidingWith(aliens[j]);\n    }\n  }\n};\n\nconst moveAliens = function() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  aliens.forEach(function(invader) {\n    invader.move();//.bind(invader);\n  });\n};\n\nconst step = function() {\n  moveAliens();\n  checkCollisions();\n};\n\nsetInterval(step.bind(this), 10);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/brood.js\n ** module id = 0\n ** module chunks = 0\n **/","\nvar canvas = document.getElementById(\"brood-canvas\");\nvar ctx = canvas.getContext(\"2d\");\n\nvar x = canvas.width/2;\nvar y = canvas.height - 30;\nvar pos = [x,y];\nvar dx = 1;\nvar dy = 1;\nvar vel = [dx, dy];\nconst RADIUS = 20;\n\nconst Alien = function(options) {\n  this.color = options.color;\n  this.radius = options.radius;\n  this.pos = options.pos;\n  this.vel = options.vel;\n};\n\nAlien.prototype.draw = function() {\n  ctx.fillStyle = this.color;\n  ctx.beginPath();\n  ctx.arc(this.pos[0], this.pos[1], this.radius, 0, Math.PI*2);\n  ctx.fill();\n  ctx.closePath();\n};\n\nAlien.prototype.move = function() {\n  this.pos[0] = (this.pos[0] + this.vel[0]) % canvas.width;\n  this.pos[1] = (this.pos[1] + this.vel[1]) % canvas.height;\n  this.draw();\n};\n\nAlien.prototype.stop = function() {\n  this.vel = [0,0];\n};\n\nAlien.prototype.lock = function(otherAlien) {\n\n};\n\nAlien.prototype.stopIfCollidingWith = function (otherAlien) {\n  x_dist = Math.abs(this.pos[0] - otherAlien.pos[0]);\n  y_dist = Math.abs(this.pos[1] - otherAlien.pos[1]);\n  if (x_dist <= RADIUS * 2 && y_dist <= RADIUS * 2) {\n    this.stop();\n    otherAlien.stop();\n  } else {\n    // debugger\n  }\n};\n\n\nmodule.exports = Alien;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/alien.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}